
保存两套配置，各512字节独立空间，起始位置确定

1、按键(2*16~484)0
id+mode1+key
id+mode2+key+func
id+mode3+len+mode3data
id+mode4+x_H+x_L+y_H+y_L
id+mode5+x_H+x_L+y_H+y_L
id+mode6+key+func
id+mode7+key+func+t_H+t_L

mode3data：
(1)单键：key
(2)shift+单键：250+key
(3)快捷键：253+key+func
(4)光标移位：239+x_H+x_L+y_H+y_L
(5)延时：254+t_H+t_L

mode6：切换键
key支持所有键
func：bit0键盘切换，bit1摇杆切换，bit2旋钮切换，bit3是否为临时切换
非临时切换：释放沿切换
临时切换：按下时存下键值，之后切换选择，并标记在切换后的情况下该键的位置，
屏蔽该位置对于切换后配置的作用，在最后捕捉到其释放沿时，填入一次键值并切换回来

mode7：按键连点
key支持所有键
func：bit0是否为自动持续连点
t_H+t_L：16位周期设定值
若上次已点击，则本次必须跳过，复位点击记录
若上次未点击，且定时已到，则本次点击，并更新定时，置位点击记录

2、辅助数值(1+4+1)478
478保留，479~480为屏幕宽，481~482为屏幕高
483为键盘方向

3、摇杆(8*2)484 492
模式(1)+按键(5)+速度(1)+死区(1)
模式：高4位按键，低3位摇杆

4、旋钮(4*2)500 504
模式(1)+按键(3)
模式：高4位按键，低3位旋钮

5、系统(4)508
灯亮度(1)+灯设置及摇杆旋钮优先级(1)+摇杆旋钮方向(1)+总优先级(1)
灯亮度：高4位RGB，低4位键盘灯
灯设置及摇杆旋钮优先级：bit7摇杆优先级，bit6旋钮优先级，
		bit5摇杆映射，bit4灯光指示，bit3~bit1呼吸周期，bit0键盘灯设置
摇杆旋钮方向：bit7摇杆1x，bit6摇杆1y，bit5摇杆1r，bit4摇杆2x，
		bit3摇杆2y，bit2摇杆2r，bit1旋钮1，bit0旋钮2
总优先级：在USB发送的数据中为本配置是否优先，到设备后被转为优先配置下标









说明：
设置键盘区的按键需先选择所需模式，再点击模式下方对应按钮(KEY1~16)，按钮文字变灰即代表等待输入内容
1、单键模式：支持设置任一个按键
2、快捷键模式：支持设置Ctrl、Shift、Alt、Win的任意组合加任一个其他按键
3、按键组模式：右下4个按钮为按键组使用，输入内容先点击输入，输入完后再点(此时其文字已变为停止)
支持5类内容：
①除Ctrl、Shift、Alt、Win外的单键
②按下Shift时的字符，如按Shift+2则会输入@
③快捷键，欲填入此内容则先点击下方快捷键按钮(其文字将变为单键)再输入快捷键，之后再点一次可变回来
④光标点击，操作与下文光标移位和点击中所述相同，不过会默认是光标点击
⑤延时，点击时间填入即可
4、清除按键：用于清除单按键和快捷键模式下的按键，按键组模式则使用右下的删除或清空按键
5、光标移位和点击：需要在系统页设置屏幕尺寸，再点击位置捕获，界面将变半透明，将鼠标放到需要的位置，
之后按键盘上任意按键，即可获取此时鼠标坐标，当然也可手动输入，最后点击位置填入来设置要移到或点击的坐标
6、切换键：分为永久切换键和临时切换键，前者通过按shift+0~7设置，后者通过按alt+0~7设置
1(001b)为键盘切换(k表示)，2(010b)为摇杆切换(r表示)，4(100b)为旋钮切换(e表示)
其他数则为以上三者的二进制组合，即3(011b)=kr，5(101b)=ke，6(110b)=re，7(111b)=kre
小写字母代表临时切换，即仅按下时切换，松开按键恢复，大写字母代表永久切换，按后就切换过去
另外支持在临时切换键上再设置一个单键，若按下切换后又按了别的键，则此单键无效，但若仅按下又抬起切换键，则输出一次该单键
7、按键连点：支持设置任一个单键
按alt+按键，则设置为仅按住时连点，按shift+按键，则设置为按一次自动持续连点,再按一次解除
再次选择该键，点击时间填入，则可填入间隔时间，注意若设置为0则会长按，另外由于设备速度等问题过小的时间间隔不一定能实现
8、按键保持：
对于shift、alt、ctrl、win，按下它们和其他键的组合容易触发系统快捷键使配置程序失去焦点
因此可按下按键保持，此后按一次上述4键即可视为一直按住，再按其他键即可
9、鼠标与媒体按键：把它们当成键盘按键一般，不过要通过点击右上方的按钮来设置

更多内容及用法详解见说明文档
										        By light&electricity




注意:按键设置仅在功能或按键配置为按键模式下有效。效果参数代表速度鼠标的速度、位置鼠标的最大位移、按键的
自动连按间隔(0则为长按)。死区不宜为0。灯控模式下，按下摇杆则保存到FLASH后退出。

注意:按键设置仅在功能或按键配置为按键模式下有效。旋钮逆时针转动为正方向，如音量增加、滚轮向上、参数增大。
在灯控模式下，按下旋钮则不写入FLASH地退出，旋转旋钮改变键盘灯或RGB灯的亮度。








//******************************按键配置******************************//
const uint16_t para_start[2] = {0,512};
const uint16_t mode3_start[2] = {0,484};
uint8_t mode3_data[968];//存储载入的按键配置数据

struct config_key{//按键配置结构体
	uint8_t mode;//模式
	//1:单按键,2:快捷键,3:顺序键,4:鼠标左键,5:鼠标中键,6:鼠标右键
	//7:总切换,8:子切换,9:摇杆切换,10:旋钮切换,11:灯控,12:串口,13:蜂鸣器
	uint8_t key;//键值
	uint8_t func;//功能键
	uint16_t i;//mode3起始下标(访问mode3_data)
};
struct config_key cfg_key[2][18];
//********************************************************************//

//******************************摇杆配置******************************//
uint8_t cfg_rk[4];//摇杆配置
//1:速度鼠标,2:位置鼠标,3:四向四按键,4:八向四按键
uint8_t cfg_rk_key[4];//摇杆按键配置
//1:单按键,2:播放暂停,3:静音,4:鼠标左键,5:鼠标中键,6:鼠标右键
uint8_t key_rk[4][5];//摇杆键值(中上下左右)
uint8_t speed_rk[4] = {50,50};//摇杆速度
//uint16_t dead_x[2] = 1000, dead_y[2] = 1000;//xy死区
uint8_t dead_r[4] = {50,50,50,50};//死区半径
int8_t dir_x[4],dir_y[4],dir_r[4];//方向
uint8_t rk_cs[2];//摇杆配置选择
//********************************************************************//

//******************************旋钮配置******************************//
uint8_t cfg_ec[4];//旋钮配置
//1:音量控制,2:鼠标滚轮,3:CTRL+鼠标滚轮,4:两向两按键,5:摇杆参数控制
uint8_t cfg_ec_key[4];//旋钮按键配置
//1:单按键,2:播放暂停,3:静音,4:鼠标左键,5:鼠标中键,6:鼠标右键
uint8_t key_ec[4][3];//旋钮键值(中上下)
int8_t dir_ec[4];//方向
uint8_t ec_cs[2];//旋钮配置选择
//********************************************************************//

//******************************系统配置******************************//
uint8_t light_mode[2];//键盘灯模式
uint8_t light[2],light_rgb[2];//键盘灯和RGB灯亮度
uint8_t rgb_rk[2];//是否RGB摇杆映射
uint8_t rgb_pilot[2];//是否RGB灯光指示
uint8_t sys_cs = 0;//总配置选择
//********************************************************************//
















